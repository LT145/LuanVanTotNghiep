generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  phone     String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())

  //cart             Cart?
  //orders           Order[]
  //reviews          Review[]
  //favorites        Favorite[]
  //advertisements   Advertisement[]
  //notifications    Notification[]
  //couponsUsed      CouponUsage[]
}

enum Role {
  USER
  ADMIN
}

//
// üëï PRODUCT & CATEGORY
//
model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  brand       String?
  gender      Gender   @default(UNISEX)
  material    String? // Cotton, Linen, Polyester,...
  basePrice   Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isActive    Boolean  @default(true)

  mainCategory   MainCategory @relation(fields: [mainCategoryId], references: [id])
  mainCategoryId Int
  subCategory    SubCategory? @relation(fields: [subCategoryId], references: [id])
  subCategoryId  Int?

  variants ProductVariant[]
  images   ProductImage[]
  //reviews        Review[]
  //favorites      Favorite[]
}

enum Gender {
  MALE
  FEMALE
  UNISEX
  KIDS
}

//
// üé® VARIANTS (SIZE / COLOR)
//
model ProductVariant {
  id        Int     @id @default(autoincrement())
  color     String
  size      String
  price     Float
  stock     Int     @default(0)
  sku       String? @unique
  product   Product @relation(fields: [productId], references: [id])
  productId Int

  images ProductImage[]
  //cartItems CartItem[]
  //orderItems OrderItem[]
}

//
// üñºÔ∏è PRODUCT IMAGES
//
model ProductImage {
  id        Int             @id @default(autoincrement())
  url       String
  isMain    Boolean         @default(false)
  product   Product?        @relation(fields: [productId], references: [id])
  productId Int?
  variant   ProductVariant? @relation(fields: [variantId], references: [id])
  variantId Int?
}

//
// üè∑Ô∏è CATEGORY
//
model MainCategory {
  id            Int           @id @default(autoincrement())
  name          String        @unique
  subCategories SubCategory[]
  products      Product[]
}

model SubCategory {
  id             Int          @id @default(autoincrement())
  name           String
  mainCategory   MainCategory @relation(fields: [mainCategoryId], references: [id])
  mainCategoryId Int
  products       Product[]

  @@unique([name, mainCategoryId])
}

//
// üõí CART & ORDER
//
// model Cart {
//   id        Int        @id @default(autoincrement())
//   user      User       @relation(fields: [userId], references: [id])
//   userId    Int        @unique
//   items     CartItem[]
// }

// model CartItem {
//   id         Int              @id @default(autoincrement())
//   cart       Cart             @relation(fields: [cartId], references: [id])
//   cartId     Int
//   variant    ProductVariant   @relation(fields: [variantId], references: [id])
//   variantId  Int
//   quantity   Int              @default(1)
// }

// model Order {
//   id          Int           @id @default(autoincrement())
//   user        User           @relation(fields: [userId], references: [id])
//   userId      Int
//   totalPrice  Float
//   status      OrderStatus    @default(PENDING)
//   createdAt   DateTime       @default(now())
//   items       OrderItem[]
//   couponUsage CouponUsage?
//   address     String?
//   phone       String?
//   note        String?
// }

// model OrderItem {
//   id         Int              @id @default(autoincrement())
//   order      Order             @relation(fields: [orderId], references: [id])
//   orderId    Int
//   variant    ProductVariant    @relation(fields: [variantId], references: [id])
//   variantId  Int
//   quantity   Int
//   price      Float
// }

// enum OrderStatus {
//   PENDING
//   PAID
//   SHIPPED
//   DELIVERED
//   CANCELLED
// }

// model Review {
//   id         Int      @id @default(autoincrement())
//   content    String
//   rating     Int
//   user       User     @relation(fields: [userId], references: [id])
//   userId     Int
//   product    Product  @relation(fields: [productId], references: [id])
//   productId  Int
//   createdAt  DateTime @default(now())
// }

// model Favorite {
//   id         Int      @id @default(autoincrement())
//   user       User     @relation(fields: [userId], references: [id])
//   userId     Int
//   product    Product  @relation(fields: [productId], references: [id])
//   productId  Int
// }

// model Coupon {
//   id        Int       @id @default(autoincrement())
//   code      String     @unique
//   discount  Float
//   expiresAt DateTime
//   usages    CouponUsage[]
// }

// model CouponUsage {
//   id         Int     @id @default(autoincrement())
//   user       User    @relation(fields: [userId], references: [id])
//   userId     Int
//   order      Order   @relation(fields: [orderId], references: [id])
//   orderId    Int     @unique
//   coupon     Coupon  @relation(fields: [couponId], references: [id])
//   couponId   Int
// }

// model Advertisement {
//   id        Int      @id @default(autoincrement())
//   title     String
//   imageUrl  String
//   createdAt DateTime @default(now())
//   user      User?    @relation(fields: [userId], references: [id])
//   userId    Int?
// }

// model Notification {
//   id        Int      @id @default(autoincrement())
//   message   String
//   createdAt DateTime @default(now())
//   user      User     @relation(fields: [userId], references: [id])
//   userId    Int
// }
